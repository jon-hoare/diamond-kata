package jonhoare;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.util.stream.Collectors;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

class DiamondTest {

  @Test
  void nullInputShouldThrowBadInput() {
    assertThrows(BadInput.class, () -> new Diamond(null));
  }

  @ParameterizedTest
  @ValueSource(strings = {"", " ", "a", "!", "BAD", "\n"})
  void badInputShouldThrowBadInput(String input) {
    assertThrows(BadInput.class, () -> new Diamond(input));
  }

  @Test
  void inputAShouldDrawDiamond() {
    Diamond d = new Diamond("A");
    assertThat(d.toString(), equalTo("A"));
  }

  @Test
  void inputBShouldDrawDiamond() {
    Diamond d = new Diamond("B");
    String expected = """
        _A_
        B_B
        _A_
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputCShouldDrawDiamond() {
    Diamond d = new Diamond("C");
    String expected =
        """
        __A__
        _B_B_
        C___C
        _B_B_
        __A__
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputDShouldDrawDiamond() {
    Diamond d = new Diamond("D");
    String expected =
        """
        ___A___
        __B_B__
        _C___C_
        D_____D
        _C___C_
        __B_B__
        ___A___
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputEShouldDrawDiamond() {
    Diamond d = new Diamond("E");
    String expected =
        """
        ____A____
        ___B_B___
        __C___C__
        _D_____D_
        E_______E
        _D_____D_
        __C___C__
        ___B_B___
        ____A____
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputFShouldDrawDiamond() {
    Diamond d = new Diamond("F");
    String expected =
        """
        _____A_____
        ____B_B____
        ___C___C___
        __D_____D__
        _E_______E_
        F_________F
        _E_______E_
        __D_____D__
        ___C___C___
        ____B_B____
        _____A_____
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputGShouldDrawDiamond() {
    Diamond d = new Diamond("G");
    String expected =
        """
        ______A______
        _____B_B_____
        ____C___C____
        ___D_____D___
        __E_______E__
        _F_________F_
        G___________G
        _F_________F_
        __E_______E__
        ___D_____D___
        ____C___C____
        _____B_B_____
        ______A______
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputHShouldDrawDiamond() {
    Diamond d = new Diamond("H");
    String expected =
        """
        _______A_______
        ______B_B______
        _____C___C_____
        ____D_____D____
        ___E_______E___
        __F_________F__
        _G___________G_
        H_____________H
        _G___________G_
        __F_________F__
        ___E_______E___
        ____D_____D____
        _____C___C_____
        ______B_B______
        _______A_______
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputIShouldDrawDiamond() {
    Diamond d = new Diamond("I");
    String expected =
        """
        ________A________
        _______B_B_______
        ______C___C______
        _____D_____D_____
        ____E_______E____
        ___F_________F___
        __G___________G__
        _H_____________H_
        I_______________I
        _H_____________H_
        __G___________G__
        ___F_________F___
        ____E_______E____
        _____D_____D_____
        ______C___C______
        _______B_B_______
        ________A________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputJShouldDrawDiamond() {
    Diamond d = new Diamond("J");
    String expected =
        """
        _________A_________
        ________B_B________
        _______C___C_______
        ______D_____D______
        _____E_______E_____
        ____F_________F____
        ___G___________G___
        __H_____________H__
        _I_______________I_
        J_________________J
        _I_______________I_
        __H_____________H__
        ___G___________G___
        ____F_________F____
        _____E_______E_____
        ______D_____D______
        _______C___C_______
        ________B_B________
        _________A_________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputKShouldDrawDiamond() {
    Diamond d = new Diamond("K");
    String expected =
        """
        __________A__________
        _________B_B_________
        ________C___C________
        _______D_____D_______
        ______E_______E______
        _____F_________F_____
        ____G___________G____
        ___H_____________H___
        __I_______________I__
        _J_________________J_
        K___________________K
        _J_________________J_
        __I_______________I__
        ___H_____________H___
        ____G___________G____
        _____F_________F_____
        ______E_______E______
        _______D_____D_______
        ________C___C________
        _________B_B_________
        __________A__________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputLShouldDrawDiamond() {
    Diamond d = new Diamond("L");
    String expected =
        """
        ___________A___________
        __________B_B__________
        _________C___C_________
        ________D_____D________
        _______E_______E_______
        ______F_________F______
        _____G___________G_____
        ____H_____________H____
        ___I_______________I___
        __J_________________J__
        _K___________________K_
        L_____________________L
        _K___________________K_
        __J_________________J__
        ___I_______________I___
        ____H_____________H____
        _____G___________G_____
        ______F_________F______
        _______E_______E_______
        ________D_____D________
        _________C___C_________
        __________B_B__________
        ___________A___________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputMShouldDrawDiamond() {
    Diamond d = new Diamond("M");
    String expected =
        """
        ____________A____________
        ___________B_B___________
        __________C___C__________
        _________D_____D_________
        ________E_______E________
        _______F_________F_______
        ______G___________G______
        _____H_____________H_____
        ____I_______________I____
        ___J_________________J___
        __K___________________K__
        _L_____________________L_
        M_______________________M
        _L_____________________L_
        __K___________________K__
        ___J_________________J___
        ____I_______________I____
        _____H_____________H_____
        ______G___________G______
        _______F_________F_______
        ________E_______E________
        _________D_____D_________
        __________C___C__________
        ___________B_B___________
        ____________A____________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputNShouldDrawDiamond() {
    Diamond d = new Diamond("N");
    String expected =
        """
        _____________A_____________
        ____________B_B____________
        ___________C___C___________
        __________D_____D__________
        _________E_______E_________
        ________F_________F________
        _______G___________G_______
        ______H_____________H______
        _____I_______________I_____
        ____J_________________J____
        ___K___________________K___
        __L_____________________L__
        _M_______________________M_
        N_________________________N
        _M_______________________M_
        __L_____________________L__
        ___K___________________K___
        ____J_________________J____
        _____I_______________I_____
        ______H_____________H______
        _______G___________G_______
        ________F_________F________
        _________E_______E_________
        __________D_____D__________
        ___________C___C___________
        ____________B_B____________
        _____________A_____________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputOShouldDrawDiamond() {
    Diamond d = new Diamond("O");
    String expected =
        """
        ______________A______________
        _____________B_B_____________
        ____________C___C____________
        ___________D_____D___________
        __________E_______E__________
        _________F_________F_________
        ________G___________G________
        _______H_____________H_______
        ______I_______________I______
        _____J_________________J_____
        ____K___________________K____
        ___L_____________________L___
        __M_______________________M__
        _N_________________________N_
        O___________________________O
        _N_________________________N_
        __M_______________________M__
        ___L_____________________L___
        ____K___________________K____
        _____J_________________J_____
        ______I_______________I______
        _______H_____________H_______
        ________G___________G________
        _________F_________F_________
        __________E_______E__________
        ___________D_____D___________
        ____________C___C____________
        _____________B_B_____________
        ______________A______________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputPShouldDrawDiamond() {
    Diamond d = new Diamond("P");
    String expected =
        """
        _______________A_______________
        ______________B_B______________
        _____________C___C_____________
        ____________D_____D____________
        ___________E_______E___________
        __________F_________F__________
        _________G___________G_________
        ________H_____________H________
        _______I_______________I_______
        ______J_________________J______
        _____K___________________K_____
        ____L_____________________L____
        ___M_______________________M___
        __N_________________________N__
        _O___________________________O_
        P_____________________________P
        _O___________________________O_
        __N_________________________N__
        ___M_______________________M___
        ____L_____________________L____
        _____K___________________K_____
        ______J_________________J______
        _______I_______________I_______
        ________H_____________H________
        _________G___________G_________
        __________F_________F__________
        ___________E_______E___________
        ____________D_____D____________
        _____________C___C_____________
        ______________B_B______________
        _______________A_______________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputQShouldDrawDiamond() {
    Diamond d = new Diamond("Q");
    String expected =
        """
        ________________A________________
        _______________B_B_______________
        ______________C___C______________
        _____________D_____D_____________
        ____________E_______E____________
        ___________F_________F___________
        __________G___________G__________
        _________H_____________H_________
        ________I_______________I________
        _______J_________________J_______
        ______K___________________K______
        _____L_____________________L_____
        ____M_______________________M____
        ___N_________________________N___
        __O___________________________O__
        _P_____________________________P_
        Q_______________________________Q
        _P_____________________________P_
        __O___________________________O__
        ___N_________________________N___
        ____M_______________________M____
        _____L_____________________L_____
        ______K___________________K______
        _______J_________________J_______
        ________I_______________I________
        _________H_____________H_________
        __________G___________G__________
        ___________F_________F___________
        ____________E_______E____________
        _____________D_____D_____________
        ______________C___C______________
        _______________B_B_______________
        ________________A________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputRShouldDrawDiamond() {
    Diamond d = new Diamond("R");
    String expected =
        """
        _________________A_________________
        ________________B_B________________
        _______________C___C_______________
        ______________D_____D______________
        _____________E_______E_____________
        ____________F_________F____________
        ___________G___________G___________
        __________H_____________H__________
        _________I_______________I_________
        ________J_________________J________
        _______K___________________K_______
        ______L_____________________L______
        _____M_______________________M_____
        ____N_________________________N____
        ___O___________________________O___
        __P_____________________________P__
        _Q_______________________________Q_
        R_________________________________R
        _Q_______________________________Q_
        __P_____________________________P__
        ___O___________________________O___
        ____N_________________________N____
        _____M_______________________M_____
        ______L_____________________L______
        _______K___________________K_______
        ________J_________________J________
        _________I_______________I_________
        __________H_____________H__________
        ___________G___________G___________
        ____________F_________F____________
        _____________E_______E_____________
        ______________D_____D______________
        _______________C___C_______________
        ________________B_B________________
        _________________A_________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputSShouldDrawDiamond() {
    Diamond d = new Diamond("S");
    String expected =
        """
        __________________A__________________
        _________________B_B_________________
        ________________C___C________________
        _______________D_____D_______________
        ______________E_______E______________
        _____________F_________F_____________
        ____________G___________G____________
        ___________H_____________H___________
        __________I_______________I__________
        _________J_________________J_________
        ________K___________________K________
        _______L_____________________L_______
        ______M_______________________M______
        _____N_________________________N_____
        ____O___________________________O____
        ___P_____________________________P___
        __Q_______________________________Q__
        _R_________________________________R_
        S___________________________________S
        _R_________________________________R_
        __Q_______________________________Q__
        ___P_____________________________P___
        ____O___________________________O____
        _____N_________________________N_____
        ______M_______________________M______
        _______L_____________________L_______
        ________K___________________K________
        _________J_________________J_________
        __________I_______________I__________
        ___________H_____________H___________
        ____________G___________G____________
        _____________F_________F_____________
        ______________E_______E______________
        _______________D_____D_______________
        ________________C___C________________
        _________________B_B_________________
        __________________A__________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputTShouldDrawDiamond() {
    Diamond d = new Diamond("T");
    String expected =
        """
        ___________________A___________________
        __________________B_B__________________
        _________________C___C_________________
        ________________D_____D________________
        _______________E_______E_______________
        ______________F_________F______________
        _____________G___________G_____________
        ____________H_____________H____________
        ___________I_______________I___________
        __________J_________________J__________
        _________K___________________K_________
        ________L_____________________L________
        _______M_______________________M_______
        ______N_________________________N______
        _____O___________________________O_____
        ____P_____________________________P____
        ___Q_______________________________Q___
        __R_________________________________R__
        _S___________________________________S_
        T_____________________________________T
        _S___________________________________S_
        __R_________________________________R__
        ___Q_______________________________Q___
        ____P_____________________________P____
        _____O___________________________O_____
        ______N_________________________N______
        _______M_______________________M_______
        ________L_____________________L________
        _________K___________________K_________
        __________J_________________J__________
        ___________I_______________I___________
        ____________H_____________H____________
        _____________G___________G_____________
        ______________F_________F______________
        _______________E_______E_______________
        ________________D_____D________________
        _________________C___C_________________
        __________________B_B__________________
        ___________________A___________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputUShouldDrawDiamond() {
    Diamond d = new Diamond("U");
    String expected =
        """
        ____________________A____________________
        ___________________B_B___________________
        __________________C___C__________________
        _________________D_____D_________________
        ________________E_______E________________
        _______________F_________F_______________
        ______________G___________G______________
        _____________H_____________H_____________
        ____________I_______________I____________
        ___________J_________________J___________
        __________K___________________K__________
        _________L_____________________L_________
        ________M_______________________M________
        _______N_________________________N_______
        ______O___________________________O______
        _____P_____________________________P_____
        ____Q_______________________________Q____
        ___R_________________________________R___
        __S___________________________________S__
        _T_____________________________________T_
        U_______________________________________U
        _T_____________________________________T_
        __S___________________________________S__
        ___R_________________________________R___
        ____Q_______________________________Q____
        _____P_____________________________P_____
        ______O___________________________O______
        _______N_________________________N_______
        ________M_______________________M________
        _________L_____________________L_________
        __________K___________________K__________
        ___________J_________________J___________
        ____________I_______________I____________
        _____________H_____________H_____________
        ______________G___________G______________
        _______________F_________F_______________
        ________________E_______E________________
        _________________D_____D_________________
        __________________C___C__________________
        ___________________B_B___________________
        ____________________A____________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputVShouldDrawDiamond() {
    Diamond d = new Diamond("V");
    String expected =
        """
        _____________________A_____________________
        ____________________B_B____________________
        ___________________C___C___________________
        __________________D_____D__________________
        _________________E_______E_________________
        ________________F_________F________________
        _______________G___________G_______________
        ______________H_____________H______________
        _____________I_______________I_____________
        ____________J_________________J____________
        ___________K___________________K___________
        __________L_____________________L__________
        _________M_______________________M_________
        ________N_________________________N________
        _______O___________________________O_______
        ______P_____________________________P______
        _____Q_______________________________Q_____
        ____R_________________________________R____
        ___S___________________________________S___
        __T_____________________________________T__
        _U_______________________________________U_
        V_________________________________________V
        _U_______________________________________U_
        __T_____________________________________T__
        ___S___________________________________S___
        ____R_________________________________R____
        _____Q_______________________________Q_____
        ______P_____________________________P______
        _______O___________________________O_______
        ________N_________________________N________
        _________M_______________________M_________
        __________L_____________________L__________
        ___________K___________________K___________
        ____________J_________________J____________
        _____________I_______________I_____________
        ______________H_____________H______________
        _______________G___________G_______________
        ________________F_________F________________
        _________________E_______E_________________
        __________________D_____D__________________
        ___________________C___C___________________
        ____________________B_B____________________
        _____________________A_____________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputWShouldDrawDiamond() {
    Diamond d = new Diamond("W");
    String expected =
        """
        ______________________A______________________
        _____________________B_B_____________________
        ____________________C___C____________________
        ___________________D_____D___________________
        __________________E_______E__________________
        _________________F_________F_________________
        ________________G___________G________________
        _______________H_____________H_______________
        ______________I_______________I______________
        _____________J_________________J_____________
        ____________K___________________K____________
        ___________L_____________________L___________
        __________M_______________________M__________
        _________N_________________________N_________
        ________O___________________________O________
        _______P_____________________________P_______
        ______Q_______________________________Q______
        _____R_________________________________R_____
        ____S___________________________________S____
        ___T_____________________________________T___
        __U_______________________________________U__
        _V_________________________________________V_
        W___________________________________________W
        _V_________________________________________V_
        __U_______________________________________U__
        ___T_____________________________________T___
        ____S___________________________________S____
        _____R_________________________________R_____
        ______Q_______________________________Q______
        _______P_____________________________P_______
        ________O___________________________O________
        _________N_________________________N_________
        __________M_______________________M__________
        ___________L_____________________L___________
        ____________K___________________K____________
        _____________J_________________J_____________
        ______________I_______________I______________
        _______________H_____________H_______________
        ________________G___________G________________
        _________________F_________F_________________
        __________________E_______E__________________
        ___________________D_____D___________________
        ____________________C___C____________________
        _____________________B_B_____________________
        ______________________A______________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputXShouldDrawDiamond() {
    Diamond d = new Diamond("X");
    String expected =
        """
        _______________________A_______________________
        ______________________B_B______________________
        _____________________C___C_____________________
        ____________________D_____D____________________
        ___________________E_______E___________________
        __________________F_________F__________________
        _________________G___________G_________________
        ________________H_____________H________________
        _______________I_______________I_______________
        ______________J_________________J______________
        _____________K___________________K_____________
        ____________L_____________________L____________
        ___________M_______________________M___________
        __________N_________________________N__________
        _________O___________________________O_________
        ________P_____________________________P________
        _______Q_______________________________Q_______
        ______R_________________________________R______
        _____S___________________________________S_____
        ____T_____________________________________T____
        ___U_______________________________________U___
        __V_________________________________________V__
        _W___________________________________________W_
        X_____________________________________________X
        _W___________________________________________W_
        __V_________________________________________V__
        ___U_______________________________________U___
        ____T_____________________________________T____
        _____S___________________________________S_____
        ______R_________________________________R______
        _______Q_______________________________Q_______
        ________P_____________________________P________
        _________O___________________________O_________
        __________N_________________________N__________
        ___________M_______________________M___________
        ____________L_____________________L____________
        _____________K___________________K_____________
        ______________J_________________J______________
        _______________I_______________I_______________
        ________________H_____________H________________
        _________________G___________G_________________
        __________________F_________F__________________
        ___________________E_______E___________________
        ____________________D_____D____________________
        _____________________C___C_____________________
        ______________________B_B______________________
        _______________________A_______________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputYShouldDrawDiamond() {
    Diamond d = new Diamond("Y");
    String expected =
        """
        ________________________A________________________
        _______________________B_B_______________________
        ______________________C___C______________________
        _____________________D_____D_____________________
        ____________________E_______E____________________
        ___________________F_________F___________________
        __________________G___________G__________________
        _________________H_____________H_________________
        ________________I_______________I________________
        _______________J_________________J_______________
        ______________K___________________K______________
        _____________L_____________________L_____________
        ____________M_______________________M____________
        ___________N_________________________N___________
        __________O___________________________O__________
        _________P_____________________________P_________
        ________Q_______________________________Q________
        _______R_________________________________R_______
        ______S___________________________________S______
        _____T_____________________________________T_____
        ____U_______________________________________U____
        ___V_________________________________________V___
        __W___________________________________________W__
        _X_____________________________________________X_
        Y_______________________________________________Y
        _X_____________________________________________X_
        __W___________________________________________W__
        ___V_________________________________________V___
        ____U_______________________________________U____
        _____T_____________________________________T_____
        ______S___________________________________S______
        _______R_________________________________R_______
        ________Q_______________________________Q________
        _________P_____________________________P_________
        __________O___________________________O__________
        ___________N_________________________N___________
        ____________M_______________________M____________
        _____________L_____________________L_____________
        ______________K___________________K______________
        _______________J_________________J_______________
        ________________I_______________I________________
        _________________H_____________H_________________
        __________________G___________G__________________
        ___________________F_________F___________________
        ____________________E_______E____________________
        _____________________D_____D_____________________
        ______________________C___C______________________
        _______________________B_B_______________________
        ________________________A________________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  @Test
  void inputZShouldDrawDiamond() {
    Diamond d = new Diamond("Z");
    String expected =
        """
        _________________________A_________________________
        ________________________B_B________________________
        _______________________C___C_______________________
        ______________________D_____D______________________
        _____________________E_______E_____________________
        ____________________F_________F____________________
        ___________________G___________G___________________
        __________________H_____________H__________________
        _________________I_______________I_________________
        ________________J_________________J________________
        _______________K___________________K_______________
        ______________L_____________________L______________
        _____________M_______________________M_____________
        ____________N_________________________N____________
        ___________O___________________________O___________
        __________P_____________________________P__________
        _________Q_______________________________Q_________
        ________R_________________________________R________
        _______S___________________________________S_______
        ______T_____________________________________T______
        _____U_______________________________________U_____
        ____V_________________________________________V____
        ___W___________________________________________W___
        __X_____________________________________________X__
        _Y_______________________________________________Y_
        Z_________________________________________________Z
        _Y_______________________________________________Y_
        __X_____________________________________________X__
        ___W___________________________________________W___
        ____V_________________________________________V____
        _____U_______________________________________U_____
        ______T_____________________________________T______
        _______S___________________________________S_______
        ________R_________________________________R________
        _________Q_______________________________Q_________
        __________P_____________________________P__________
        ___________O___________________________O___________
        ____________N_________________________N____________
        _____________M_______________________M_____________
        ______________L_____________________L______________
        _______________K___________________K_______________
        ________________J_________________J________________
        _________________I_______________I_________________
        __________________H_____________H__________________
        ___________________G___________G___________________
        ____________________F_________F____________________
        _____________________E_______E_____________________
        ______________________D_____D______________________
        _______________________C___C_______________________
        ________________________B_B________________________
        _________________________A_________________________
        """;
    assertThat(d.toString(), equalTo(normalise(expected)));
  }

  private static String normalise(String expected) {
    return expected.replace('_', ' ').lines().collect(Collectors.joining("\n"));
  }
}
